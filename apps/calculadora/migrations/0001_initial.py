# Generated by Django 2.2 on 2019-04-30 04:21

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_ciudad', models.CharField(help_text='Ingrese el nombre del país', max_length=50, verbose_name='Nombre oficial')),
                ('ubicacion', models.CharField(help_text='Ingrese las coordenadas GPS de la ciudad', max_length=30, verbose_name='Ubicacion (GPS)')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
            },
        ),
        migrations.CreateModel(
            name='IdiomaOficial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_idioma', models.CharField(help_text='Nombre del idioma', max_length=20, verbose_name='Idioma Oficial')),
                ('descripcion_idioma', models.TextField(help_text='Breve descripción del idioma', max_length=200, verbose_name='Descripción del Idioma')),
            ],
            options={
                'verbose_name': 'Idioma Oficial',
                'verbose_name_plural': 'Idiomas Oficiales',
            },
        ),
        migrations.CreateModel(
            name='MonedaOficial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_moneda', models.CharField(help_text='Codigo de 3 letras', max_length=3, unique=True, verbose_name='Código')),
                ('nombre_divisa', models.CharField(help_text='Divisa', max_length=20, verbose_name='Nombre divisa')),
                ('decimales', models.IntegerField(blank=True, help_text='Número de decimales de la moneda', null=True, verbose_name='Decimal')),
                ('signo', models.CharField(help_text='Signo de la moneda', max_length=1, verbose_name='Signo')),
            ],
            options={
                'verbose_name': 'Moneda Oficial',
                'verbose_name_plural': 'Monedas Oficiales',
            },
        ),
        migrations.CreateModel(
            name='Restaurante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_restaurante', models.CharField(help_text='Ingrese el nombre del restaurante', max_length=50, verbose_name='Nombre del Restaurante')),
                ('logo', models.ImageField(blank=True, help_text='Cargue el logotipo que identifica a su restaurante', null=True, upload_to='restaurantes/', verbose_name='Logotipo')),
                ('ubicacion', models.CharField(help_text='Ingrese las coordenadas GPS del restaurante', max_length=30, verbose_name='Ubicacion (GPS)')),
                ('direccion', models.CharField(help_text='Ingrese la dirección física del restaurante', max_length=200, null=True, verbose_name='Dirección')),
                ('telefono', phonenumber_field.modelfields.PhoneNumberField(help_text='Ingrese el número telefónico del restaurante en el formato +999999999', max_length=128, region=None, unique=True, verbose_name='Número de Telefono')),
            ],
            options={
                'verbose_name': 'Restaurante',
                'verbose_name_plural': 'Restaurantes',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_pais', models.CharField(help_text='Ingrese el nombre del país', max_length=50, verbose_name='Nombre oficial')),
                ('capital', models.OneToOneField(blank=True, help_text='Capital del país', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='capital', to='calculadora.Ciudad', verbose_name='Capital')),
                ('idioma', models.ForeignKey(blank=True, help_text='Lengua Oficial', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='calculadora.IdiomaOficial', verbose_name='Idioma Oficial')),
                ('moneda', models.ForeignKey(blank=True, help_text='Moneda de circulación', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='calculadora.MonedaOficial', verbose_name='Moneda oficial')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
            },
        ),
        migrations.AddField(
            model_name='ciudad',
            name='pais',
            field=models.ForeignKey(help_text='Ingrese el nombre de la ciudad', on_delete=django.db.models.deletion.CASCADE, to='calculadora.Pais', verbose_name='Nombre de la ciudad'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('foto', models.ImageField(blank=True, help_text='Cargue una foto de perfil', null=True, upload_to='users/', verbose_name='Foto de perfil')),
                ('fecha_nacimiento', models.DateField(help_text='Seleccione su fecha de nacimiento', verbose_name='Fecha de Nacimiento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
